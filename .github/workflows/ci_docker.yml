name: Django CI Docker

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Log in to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build final image
      run: docker build -t myapp:latest .

    - name: Run Docker container
      run: |
        docker run -d --name myapp-container \
          myapp:latest
        # Wait for the container to be ready
        sleep 10

    - name: Run migrations
      run: docker exec myapp-container bash -c "python manage.py migrate"

    - name: Collect static files
      run: docker exec myapp-container bash -c "python manage.py collectstatic --noinput"

    - name: Start Django server
      run: |
        docker exec -d myapp-container bash -c "python manage.py runserver 0.0.0.0:8000"
        # Wait for the server to be ready
        sleep 10

    - name: Run tests
      run: docker exec myapp-container bash -c "python manage.py test && python manage.py qa"

    - name: Register user
      run: |
        docker exec myapp-container bash -c "curl -X POST http://localhost:8000/api/register/ \
          -H 'Content-Type: application/json' \
          -d '{\"username\": \"GitUser\", \"password\": \"password123\"}'"

    - name: Get token
      id: get_token
      run: |
        token=$(docker exec myapp-container bash -c "curl -s -X POST http://localhost:8000/api/token/ -d 'username=GitUser&password=password123'" | jq -r '.access')
        echo "::set-output name=token::$token"

    - name: Process image
      run: |
        token=${{ steps.get_token.outputs.token }}
        docker exec myapp-container bash -c "curl -X POST http://localhost:8000/api/process-image/ \
          -H 'Authorization: Bearer $token' \
          -F 'image=@input/1_Color.png'"

    - name: Stop and remove container
      run: docker rm -f myapp-container
